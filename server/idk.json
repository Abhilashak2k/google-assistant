 #creating the outletjson only
  public function createOutletJson(){
  	$conn = ConnectionManager::get('default');
  	#fetching blogs ids
  	$query1 = $conn->execute('SELECT DISTINCT ID FROM wp_posts LEFT JOIN wp_term_relationships ON (wp_posts.ID = wp_term_relationships.object_id) LEFT JOIN wp_term_taxonomy ON (wp_term_relationships.term_taxonomy_id = wp_term_taxonomy.term_taxonomy_id) WHERE post_type = "post" AND post_status ="publish" AND wp_term_taxonomy.term_id IN (72,73,74,75)');
  	$results1 = $query1->fetchAll('assoc');
  	foreach ($results1 as &$item)
    {
        $item = reset($item);
    }
    $results1 = implode(',', $results1);

    #fetching outlets ids
    $queryOutletId = $conn->execute('SELECT DISTINCT ID FROM wp_posts WHERE ID NOT IN ('.$results1.') AND post_status = "publish" AND post_type  = "post"');
    $outletIds = $queryOutletId->fetchAll('assoc');
  	$outlet_id = [];
  	foreach($outletIds as $val){
  	  $outlet_id[] = $val['ID'];
  	}

  	$outlet_details = [];
  	foreach($outlet_id as $v => $id){
  		$query2 = $conn->execute('SELECT DISTINCT
	  id,post_author,post_title,post_content,post_name AS "link"
    ,(SELECT meta_value FROM wp_postmeta WHERE wp_postmeta.meta_key = "_aioseop_keywords" AND wp_postmeta.post_id = wp_posts.ID) AS "seo_keywords"
    ,(SELECT meta_value FROM wp_postmeta WHERE wp_postmeta.meta_key = "_aioseop_description" AND wp_postmeta.post_id = wp_posts.ID) AS "seo_desc"
    ,(SELECT meta_value FROM wp_postmeta WHERE wp_postmeta.meta_key = "_aioseop_title" AND wp_postmeta.post_id = wp_posts.ID) AS "seo_title"
	  ,(SELECT meta_value FROM wp_postmeta WHERE wp_postmeta.meta_key = "best_for" AND wp_postmeta.post_id = wp_posts.ID) AS "best_for"
	  ,(SELECT meta_value FROM wp_postmeta WHERE wp_postmeta.meta_key = "special_info" AND wp_postmeta.post_id = wp_posts.ID) AS "special_info"
	  ,(SELECT meta_value FROM wp_postmeta WHERE wp_postmeta.meta_key = "also_serves" AND wp_postmeta.post_id = wp_posts.ID) AS "also_serves"
	  ,(SELECT meta_value FROM wp_postmeta WHERE wp_postmeta.meta_key = "timing_0_open_day" AND   wp_postmeta.post_id = wp_posts.ID) AS "open-timing"
	  ,(SELECT meta_value FROM wp_postmeta WHERE wp_postmeta.meta_key = "timing_0_close_day" AND wp_postmeta.post_id = wp_posts.ID) AS "close-timing"
	  ,(SELECT meta_value FROM wp_postmeta WHERE wp_postmeta.meta_key = "_pronamic_google_maps_address" AND wp_postmeta.post_id = wp_posts.ID) AS "address"
	  ,(SELECT meta_value FROM wp_postmeta WHERE wp_postmeta.meta_key = "directions_landmarks" AND wp_postmeta.post_id = wp_posts.ID) AS "direction_landmarks"
	  ,(SELECT meta_value FROM wp_postmeta WHERE wp_postmeta.meta_key = "seating" AND wp_postmeta.post_id = wp_posts.ID) AS "seating"
	  ,(SELECT meta_value FROM wp_postmeta WHERE wp_postmeta.meta_key = "_pronamic_google_maps_longitude" AND wp_postmeta.post_id = wp_posts.ID) AS "longitude"
	  ,(SELECT meta_value FROM wp_postmeta WHERE wp_postmeta.meta_key = "_pronamic_google_maps_latitude" AND wp_postmeta.post_id = wp_posts.ID) AS "latitude"
	  ,(SELECT meta_value FROM wp_postmeta WHERE wp_postmeta.meta_key = "phone_no" AND wp_postmeta.post_id = wp_posts.ID) AS "phone_no"
	  ,(SELECT p.guid FROM wp_postmeta AS pm INNER JOIN wp_posts AS p ON pm.meta_value=p.ID WHERE pm.post_id = "'.$id.'" AND pm.meta_key = "_thumbnail_id") AS "image_url"
	  ,(SELECT group_concat(wp_terms.name separator ", ") 
	  FROM wp_terms
	  INNER JOIN wp_term_taxonomy on wp_terms.term_id = wp_term_taxonomy.term_id
	  INNER JOIN wp_term_relationships wpr on wpr.term_taxonomy_id = wp_term_taxonomy.term_taxonomy_id
	  WHERE taxonomy= "location" and wp_posts.ID = wpr.object_id
	  ) AS "location"
	  ,(SELECT group_concat(wp_terms.name separator ", ") 
	  FROM wp_terms
	  INNER JOIN wp_term_taxonomy on wp_terms.term_id = wp_term_taxonomy.term_id
	  INNER JOIN wp_term_relationships wpr on wpr.term_taxonomy_id = wp_term_taxonomy.term_taxonomy_id
	  WHERE taxonomy= "cuisine" and wp_posts.ID = wpr.object_id
	  ) AS "cuisine"
	  ,(SELECT group_concat(wp_terms.name separator ", ") 
      FROM wp_terms
      INNER JOIN wp_term_taxonomy on wp_terms.term_id = wp_term_taxonomy.term_id
      INNER JOIN wp_term_relationships wpr on wpr.term_taxonomy_id = wp_term_taxonomy.term_taxonomy_id
      WHERE taxonomy= "category" and wp_posts.ID = wpr.object_id
	  ) AS "categories"
	  ,(SELECT group_concat(wp_terms.name separator ", ") 
      FROM wp_terms
      INNER JOIN wp_term_taxonomy on wp_terms.term_id = wp_term_taxonomy.term_id
      INNER JOIN wp_term_relationships wpr on wpr.term_taxonomy_id = wp_term_taxonomy.term_taxonomy_id
      WHERE taxonomy= "post_tag" and wp_posts.ID = wpr.object_id
	  ) AS "Tags"
	  FROM wp_posts
	  WHERE post_type = "post" AND id = "'.$id.'"
	  ORDER BY
	  id');
      
      $results2 = $query2->fetchAll('assoc');
      $results2[0]['isOutlet'] = true;
      $outlet_details[] = $results2;
    }
    #fetching term ids to compare
  	$term_ids = [];
  	foreach($outlet_id as $v => $id){
  	  $query3 = $conn->execute('SELECT term_id FROM wp_term_taxonomy INNER JOIN wp_term_relationships ON wp_term_taxonomy.term_taxonomy_id = wp_term_relationships.term_taxonomy_id AND wp_term_taxonomy.taxonomy = "location" AND wp_term_relationships.object_id = "'.$id.'"');
  	  $results3 = $query3->fetchAll('assoc');
  	  $results3[0]['post_id'] = $id;
      $term_ids[] = $results3;
  	}
  	#query to get all city name and terms ids
  	$query4 = $conn->execute('SELECT wp_terms.term_id as ID, wp_terms.name as name, wp_terms.slug as slug, (SELECT wp_terms.name FROM wp_terms WHERE wp_terms.term_id = wp_term_taxonomy.parent) as parent FROM wp_terms,wp_term_taxonomy WHERE wp_term_taxonomy.term_id = wp_terms.term_id AND wp_term_taxonomy.taxonomy="location"');
  	$results4 = $query4->fetchAll('assoc');
  	
  	$arr=[];
  	foreach($results4 as $r => $rr){
  	  foreach($term_ids as $t => $tt){
  	  	if(array_key_exists('term_id', $tt[0])){
  	  	  if($tt[0]['term_id'] == $rr['ID']){
  	  	  	if($rr['parent'] != null){
  	  	  	  $arr[] = $rr['parent'];
  	  	  	  $arr[] = $tt[0]['post_id']; 
  	  	  	}else{
  	  	  	  $arr[] = $rr['name'];
  	  	  	  $arr[] = $tt[0]['post_id'];
  	  	  	}
  	  	  }
  	  	}
  	  }
  	}
    $newArr[] = array_chunk($arr,2);

    $m=[];
    foreach($outlet_details as $arrr => $v){
  	  foreach($newArr as $a => $k){
  		  foreach($k as $j){
  			  if($j[1] == $v[0]['id']){	
  				$v[0]['parent'] = $j[0];
  				$m[]=$v[0];
  			  }
  		  }
  	  }
    }
    $outletJSON = json_encode($m);

    if(file_exists(WWW_ROOT . '/json/outlet.json')){
  	  file_put_contents(WWW_ROOT . '/json/outlet.json', $outletJSON);
    }
  }